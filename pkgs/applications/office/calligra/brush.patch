diff --git a/krita/plugins/paintops/libbrush/kis_imagepipe_brush.cpp b/krita/plugins/paintops/libbrush/kis_imagepipe_brush.cpp
index d870dfc..b65e1b9 100644
--- a/krita/plugins/paintops/libbrush/kis_imagepipe_brush.cpp
+++ b/krita/plugins/paintops/libbrush/kis_imagepipe_brush.cpp
@@ -23,6 +23,17 @@
 
 class KisImageBrushesPipe : public KisBrushesPipe<KisGbrBrush>
 {
+
+/*
+   pre and post are split because:
+
+21:12:20 < dmitryK> boud: i guess it was somehow related to the fact that the maskWidth/maskHeight should
+                    correspond to the size of the mask returned by paintDevice()
+21:13:33 < dmitryK> boud: the random stuff is called once per brush->paintDevice() call, after the device is
+                    returned to the paint op, that is "preparing the randomness for the next call"
+21:14:16 < dmitryK> boud: and brushesPipe->currentBrush() always returning the same brush for any particular
+                    paintInfo.
+*/
 protected:
     static int selectPre(KisParasite::SelectionMode mode,
                          int index, int rank,
@@ -48,6 +59,12 @@ protected:
                 angle -= 2.0 * M_PI;
             index = static_cast<int>(angle / (2.0 * M_PI) * rank);
             break;
+        case KisParasite::TiltX:
+            index = qRound(info.xTilt() / 2.0 * rank) + rank / 2;
+            break;
+        case KisParasite::TiltY:
+            index = qRound(info.yTilt() / 2.0 * rank) + rank / 2;
+            break;
         default:
             warnImage << "Parasite" << mode << "is not implemented";
             index = 0;
@@ -70,6 +87,9 @@ protected:
         case KisParasite::Pressure:
         case KisParasite::Angular:
             break;
+        case KisParasite::TiltX:
+        case KisParasite::TiltY:
+            break;
         default:
             warnImage << "Parasite" << mode << "is not implemented";
             index = 0;
lines 1-45/45 (END)
